{"name": "Проверка калькулятора", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=127.0.6533.120)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7666B9642+30946]\n\t(No symbol) [0x00007FF76666E3D9]\n\t(No symbol) [0x00007FF766566FDA]\n\t(No symbol) [0x00007FF76653CB85]\n\t(No symbol) [0x00007FF7665E37A7]\n\t(No symbol) [0x00007FF7665FA771]\n\t(No symbol) [0x00007FF7665DC813]\n\t(No symbol) [0x00007FF7665AA6E5]\n\t(No symbol) [0x00007FF7665AB021]\n\tGetHandleVerifier [0x00007FF7667EF84D+1301229]\n\tGetHandleVerifier [0x00007FF7667FBDC7+1351783]\n\tGetHandleVerifier [0x00007FF7667F2A13+1313971]\n\tGetHandleVerifier [0x00007FF7666EDD16+245686]\n\t(No symbol) [0x00007FF76667759F]\n\t(No symbol) [0x00007FF766673814]\n\t(No symbol) [0x00007FF7666739A2]\n\t(No symbol) [0x00007FF76666A3FF]\n\tBaseThreadInitThunk [0x00007FF8252C257D+29]\n\tRtlUserThreadStart [0x00007FF825C6AF28+40]", "trace": "@allure.title(\"Проверка калькулятора\")\n    @allure.description(\"Заполнение время отправки запроса в калькуляторе. Использование селекторов для нажатия на клавиши.\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.feature(\"CREATE\")\n    def test_info():\n        driver = webdriver.Chrome()\n    \n        Calculator_Page = CalculatorPage(driver)\n        Calculator_Page.test_data(\"45\")\n>       Calculator_Page.wait(\"15\")\n\ntask_3\\task_3_test.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntask_3\\CalculatorPage.py:36: in wait\n    assert wait_txt.until(condition)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:96: in until\n    value = method(self._driver)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:243: in _predicate\n    element_text = driver.find_element(*locator).text\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001EF3AF13290>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...07FF76666A3FF]\\\\n\\\\tBaseThreadInitThunk [0x00007FF8252C257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FF825C6AF28+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=127.0.6533.120)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7666B9642+30946]\nE       \t(No symbol) [0x00007FF76666E3D9]\nE       \t(No symbol) [0x00007FF766566FDA]\nE       \t(No symbol) [0x00007FF76653CB85]\nE       \t(No symbol) [0x00007FF7665E37A7]\nE       \t(No symbol) [0x00007FF7665FA771]\nE       \t(No symbol) [0x00007FF7665DC813]\nE       \t(No symbol) [0x00007FF7665AA6E5]\nE       \t(No symbol) [0x00007FF7665AB021]\nE       \tGetHandleVerifier [0x00007FF7667EF84D+1301229]\nE       \tGetHandleVerifier [0x00007FF7667FBDC7+1351783]\nE       \tGetHandleVerifier [0x00007FF7667F2A13+1313971]\nE       \tGetHandleVerifier [0x00007FF7666EDD16+245686]\nE       \t(No symbol) [0x00007FF76667759F]\nE       \t(No symbol) [0x00007FF766673814]\nE       \t(No symbol) [0x00007FF7666739A2]\nE       \t(No symbol) [0x00007FF76666A3FF]\nE       \tBaseThreadInitThunk [0x00007FF8252C257D+29]\nE       \tRtlUserThreadStart [0x00007FF825C6AF28+40]\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchWindowException"}, "description": "Заполнение время отправки запроса в калькуляторе. Использование селекторов для нажатия на клавиши.", "steps": [{"name": "Поиск селекторов, нажатие на кнопки", "status": "passed", "parameters": [{"name": "second", "value": "'45'"}], "start": 1724604104097, "stop": 1724604104364}, {"name": "Установка времени", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=127.0.6533.120)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7666B9642+30946]\n\t(No symbol) [0x00007FF76666E3D9]\n\t(No symbol) [0x00007FF766566FDA]\n\t(No symbol) [0x00007FF76653CB85]\n\t(No symbol) [0x00007FF7665E37A7]\n\t(No symbol) [0x00007FF7665FA771]\n\t(No symbol) [0x00007FF7665DC813]\n\t(No symbol) [0x00007FF7665AA6E5]\n\t(No symbol) [0x00007FF7665AB021]\n\tGetHandleVerifier [0x00007FF7667EF84D+1301229]\n\tGetHandleVerifier [0x00007FF7667FBDC7+1351783]\n\tGetHandleVerifier [0x00007FF7667F2A13+1313971]\n\tGetHandleVerifier [0x00007FF7666EDD16+245686]\n\t(No symbol) [0x00007FF76667759F]\n\t(No symbol) [0x00007FF766673814]\n\t(No symbol) [0x00007FF7666739A2]\n\t(No symbol) [0x00007FF76666A3FF]\n\tBaseThreadInitThunk [0x00007FF8252C257D+29]\n\tRtlUserThreadStart [0x00007FF825C6AF28+40]\n\n", "trace": "  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\user\\Desktop\\Python_1\\HW_7\\task_3\\CalculatorPage.py\", line 36, in wait\n    assert wait_txt.until(condition)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 96, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 243, in _predicate\n    element_text = driver.find_element(*locator).text\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 748, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "total", "value": "'15'"}], "start": 1724604104365, "stop": 1724604105915}], "start": 1724604100980, "stop": 1724604105926, "uuid": "35f9715c-83df-4fc7-896a-6d40b5f92e65", "historyId": "5c6ce59106515d726495708ae255d513", "testCaseId": "5c6ce59106515d726495708ae255d513", "fullName": "task_3.task_3_test#test_info", "labels": [{"name": "severity", "value": "critical"}, {"name": "feature", "value": "CREATE"}, {"name": "parentSuite", "value": "task_3"}, {"name": "suite", "value": "task_3_test"}, {"name": "host", "value": "WIN-V4Q9M8VTJ6F"}, {"name": "thread", "value": "16204-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "task_3.task_3_test"}]}